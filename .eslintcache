[{"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/index.js":"1","/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/App.js":"2","/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/reportWebVitals.js":"3","/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/Star.js":"4","/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/StarRating.js":"5","/Users/m1/code/StarRating/src/index.js":"6","/Users/m1/code/StarRating/src/App.js":"7","/Users/m1/code/StarRating/src/reportWebVitals.js":"8","/Users/m1/code/StarRating/src/Star.js":"9","/Users/m1/code/StarRating/src/StarRating.js":"10"},{"size":500,"mtime":1612339268084,"results":"11","hashOfConfig":"12"},{"size":2211,"mtime":1612471867311,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1612339268085,"results":"14","hashOfConfig":"12"},{"size":317,"mtime":1612434235269,"results":"15","hashOfConfig":"12"},{"size":570,"mtime":1612465191822,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1612524514944,"results":"17","hashOfConfig":"18"},{"size":290,"mtime":1612533884326,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1612524514944,"results":"20","hashOfConfig":"18"},{"size":363,"mtime":1612531545953,"results":"21","hashOfConfig":"18"},{"size":1804,"mtime":1612534758746,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"zsqnpl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"19x5zhy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/index.js",[],["47","48"],"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/App.js",["49"],"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/reportWebVitals.js",[],"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/Star.js",[],"/Users/m1/code/TryLearnReact2ndEd/my-react-app/src/StarRating.js",[],"/Users/m1/code/StarRating/src/index.js",[],["50","51"],"/Users/m1/code/StarRating/src/App.js",["52","53","54","55"],"\nimport { FaStar } from 'react-icons/fa';\nimport Star from './Star';\nimport StarRating from \"./StarRating\";\nimport { useState, useEffect } from \"react\";\n\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div>\n      <StarRating numStars=\"10\" />\n    </div>\n  );\n\n}\n\nexport default App;\n","/Users/m1/code/StarRating/src/reportWebVitals.js",[],"/Users/m1/code/StarRating/src/Star.js",[],"/Users/m1/code/StarRating/src/StarRating.js",["56"],"import { useState } from \"react\";\nimport Star from \"./Star\";\n\n// Requirements:\n//   1) The initial stars should be displayed\n//   2) When the user enters the area, a light blue color shows how many stars, and follows the user's mouse movement\n//   3) When the user clicks the number of stars, the color changes back to the original color, and user moving would not have no effect -- consider it done\n//   4) If the user moves away and moves back in, now the user should be able to alter the rating again\n\nexport default function StarRating({ numStars = 5, ...props }) {\n  console.log(`numStars ${numStars} and the props ${props}`, props);\n\n  const [numSelectedStars, setNumSelectedStars] = useState(3);\n  const [numHoveringStars, setNumHoveringStars] = useState(null);\n\n  const [isUserHovering, setIsUserHovering] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n\n  function getColor(isUserHovering, i, numSelectedStars, numHoveringStars) {\n    let color;\n    if (isUserHovering) {\n      color = i < numHoveringStars ? \"red\" : \"grey\"   // or #73c2fb Maya blue\n    } else {\n      color = i < numSelectedStars ? \"red\" : \"grey\"\n    }\n    return color;\n  }\n\n  return (\n    <div class=\"star-rating\">\n      <div onMouseEnter={() => setIsUserHovering(true)} onMouseLeave={() => { setIsUserHovering(false); setIsDone(false); }} >\n        {Array.from({ length: numStars }).map((e, i) =>\n          <Star\n            key={i}\n            isUserHovering={isUserHovering}\n            color={getColor(isUserHovering, i, numSelectedStars, numHoveringStars)}\n            handleSelect={() => setNumSelectedStars(i + 1)}\n            handleHover={() => setNumHoveringStars(i + 1)}\n          />)}\n      </div>\n      <div class=\"label\">rating {numSelectedStars}</div>\n    </div>\n  );\n}\n\nexport { StarRating };",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":48,"column":11,"nodeType":"63","endLine":48,"endColumn":39},{"ruleId":"57","replacedBy":"64"},{"ruleId":"59","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"66","severity":1,"message":"71","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":5,"column":20,"nodeType":"68","messageId":"69","endLine":5,"endColumn":29},{"ruleId":"66","severity":1,"message":"73","line":17,"column":10,"nodeType":"68","messageId":"69","endLine":17,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"no-unused-vars","'FaStar' is defined but never used.","Identifier","unusedVar","'Star' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'isDone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]